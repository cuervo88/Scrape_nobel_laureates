# -*- coding: utf-8 -*-
"""Laureate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zvj74HPZUdL81Yqdm7YgyaLCZuQwPc5p
"""

from bs4 import BeautifulSoup
import requests
import pandas as pd
url = 'https://en.wikipedia.org/wiki/List_of_Nobel_laureates'
req = requests.get(url)
soup = BeautifulSoup(req.content, 'html.parser')
tbody = soup.find_all('table')[0].tbody
nobel = ['Physics','Chemistry','Medicine','Literature','Peace','Economics']
list1 = [['Name','Link','Category','Year','Birthday','Sign']]
signs = ['Capricorn','Aquarius','Pisces','Aries','Taurus','Gemini','Cancer','Leo','Virgo','Libra','Scorpio','Sagittarius']
dates_cut = [20,19,20,20,21,21,22,21,23,23,22,22]
for tr in tbody.find_all('tr'):
  year = tr.find('td',align="center")
  n = 0
  for td in tr.find_all('td'):
    n = n+1
    date = None
    sign = None
    for td_ref in td.find_all('a'):
      name = td_ref.get('title')
      link = 'https://en.wikipedia.org' + td_ref.get('href')
      category = nobel[n-2]
      years = year.get_text()[:-1]
      req = requests.get(link)
      soup2 = BeautifulSoup(req.content, 'html.parser')
      try:
        date = soup2.find('span', class_="bday").getText()
      except:
        date = soup2.find('span').getText()
      date = date.replace('(','')
      date = date.replace(' ','')
      date = date.replace(')','')
      if date[5:7].isnumeric() & date[8:10].isnumeric():
        for j in range(12):
          if int(date[5:7]) == j+1:
            if int(date[8:10])  < dates_cut[j]:
              sign = signs[j]
            else:
              m = j+1
              if m == 12:
                m = 0
              sign = signs[m]     
      list1.append([name,link,category,years,date,sign])
df = pd.DataFrame(list1[1:], columns=list1[0])

signs = ['Capricorn','Aquarius','Pisces','Aries','Taurus','Gemini','Cancer','Leo','Virgo','Libra','Scorpio','Sagittarius']
list1 = []
for i in range(len(df)):
  if df['Sign'][i] is None:
    list1.append(None)
  else:
    for j in range(len(signs)):
      if df['Sign'][i] == signs[j]:
        list1.append(j)

df['Sorter'] = list1
df = df.sort_values('Sorter')

from plotly.subplots import make_subplots
import plotly.graph_objects as go
from google.colab import drive
drive.mount('/content/drive')
fig = make_subplots(rows=3, cols=2)
rownum = 1
colnum = 1
colours = ['darkblue','darkgreen','darkred','darkorange','deeppink','darkcyan']
col_num = 0
for name, group in df.groupby('Category'):
  fig.append_trace(go.Histogram(x=group['Sign'],name = name, marker=dict(color=colours[col_num])), row=rownum, col=colnum)
  fig.add_trace(trace)
  col_num = 1 + col_num
  rownum = rownum +1
  if rownum >3:
    rownum = 1
    colnum = colnum + 1

fig.show()